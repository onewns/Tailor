type User {
  id: ID! @id
  avatar: String
    @default(
      value: "https://www.pngitem.com/pimgs/m/150-1503945_transparent-user-png-default-user-image-png-png.png"
    )
  username: String! @unique
  nickname: String!
  passwd: String!
  email: String! @unique
  bio: String
  following: [User!]! @relation(name: "FollowRelation")
  followers: [User!]! @relation(name: "FollowRelation")
  posts: [Post!]! @relation(name: "PostsOfUser", onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikesOfUser", onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentsOfUser", onDelete: CASCADE)
  rooms: [Room!]!
  relChallenger: [Post!] @relation(name: "RCOfPosts")
  preChallenger: [Post!] @relation(name: "PCOfPosts")
  nextChallenger: [Post!] @relation(name: "NCOfPosts")
  tagChallenger: [Post!] @relation(name: "TCOfPosts")
  loginSecret: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  favCategory: String
  confirmEmail: Boolean
  keyForVerify: String
}
type Post {
  id: ID! @id
  caption: String
  location: String
  files: [File!]! @relation(name: "FilesOfPost", onDelete: CASCADE)
  user: User! @relation(name: "PostsOfUser")
  likes: [Like!]! @relation(name: "LikeOfPost", onDelete: CASCADE)
  hashtags : [Hashtag!]! @relation(name: "HashtagofPost")
  comments: [Comment!]! @relation(name: "CommentOfPost", onDelete: CASCADE)
  category: String!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  relChallenger: [User!] @relation(name: "RCOfPosts")
  preChallenger: [User!] @relation(name: "PCOfPosts")
  nextChallenger: [User!] @relation(name: "NCOfPosts")
  nextPosts: [Post!] @relation(name: "ChallengeRelation")
  prePosts: [Post!] @relation(name: "ChallengeRelation")
  tagChallenger: [User!] @relation(name: "TCOfPosts")
  textContent: String
  video: [Video!]! @relation(name: "VideoOfPost", onDelete: CASCADE)
  image: [Image!]! @relation(name: "ImageOfPost", onDelete: CASCADE)
  audio: [Audio!]! @relation(name: "AudioOfPost", onDelete: CASCADE)
  text: [Text!]! @relation(name: "TextOfPost", onDelete: CASCADE)
}
type File {
  id: ID! @id
  url: String!
  post: Post @relation(name: "FilesOfPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  text: [Text!] @relation(name:"TextFiles")
  video: [Video!] @relation(name:"VideoFiles")
  audio: [Audio!] @relation(name:"AudioFiles")
  image: [Image!] @relation(name:"ImageFiles")
}

type Room {
  id: ID! @id
  participants: [User!]!
  messages: [Message!]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Message {
  id: ID! @id
  text: String!
  from: User! @relation(name: "From")
  to: User! @relation(name: "To")
  room: Room!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Like {
  id: ID! @id
  user: User @relation(name: "LikesOfUser")
  post: Post @relation(name: "LikeOfPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Comment {
  id: ID! @id
  text: String!
  user: User @relation(name: "CommentsOfUser")
  post: Post @relation(name: "CommentOfPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Video{
  id: ID! @id
  video_url: String!
  createdAt: DateTime! @createdAt
  post: Post @relation(name: "VideoOfPost")
  files: [File!]! @relation(name: "VideoFiles", onDelete: CASCADE)

}

type Image{
  id: ID! @id
  image_url: String!
  files: [File!]! @relation(name: "ImageFiles", onDelete: CASCADE)
  post: Post @relation(name: "ImageOfPost", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
}

type Audio{
  id: ID! @id
  audio_url: String!
  audio_img_url: String! 
  audioFile: File! @relation(name: "AudioFiles", onDelete: CASCADE)
  post: Post @relation(name: "AudioOfPost", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
}

type Text{
  id: ID! @id
  text_img_url: String! 
  content: String!
  imageFile: File! @relation(name: "TextFiles", onDelete: CASCADE)
  post: Post @relation(name: "TextOfPost", onDelete: CASCADE)
  relay: Boolean!
  createdAt: DateTime! @createdAt
}

type Category {
  id: ID! @id
  cat_name: String!
}

type Hashtag{
  id: ID! @id
  tag_name: String! @unique
  posts: [Post!]! @relation(name: "HashtagofPost")
} 